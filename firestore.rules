rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is a Music Director
    function isMusicDirector(userId) {
      return get(/databases/$(database)/documents/users/$(userId)).data.role == 'Music Director';
    }

    // Allow read access for any authenticated user, but restrict writes.
    match /users/{userId} {
      allow read;
      // Allow a user to update their own document, or an admin to update any.
      allow update: if request.auth.uid == userId || isMusicDirector(request.auth.uid);
      // Only Music Directors can create or delete users.
      allow create, delete: if isMusicDirector(request.auth.uid);
    }
    
    match /songs/{songId} {
      // Any authenticated user can read the music library.
      allow read: if request.auth != null;
      // Only Music Directors can create, update, or delete songs.
      allow write: if isMusicDirector(request.auth.uid);
    }

    match /concerts/{concertId} {
       // Any authenticated user can read concert information.
      allow read: if request.auth != null;
      // Only Music Directors can create, update, or delete concerts.
      allow write: if isMusicDirector(request.auth.uid);
    }

    // Rules for app-wide configuration data, like taxonomy
    match /app-data/{docId} {
      // Any authenticated user can read the taxonomy.
      allow read: if request.auth != null;
      // Only Music Directors can write/update the taxonomy.
      allow write: if isMusicDirector(request.auth.uid);
    }
  }
}
