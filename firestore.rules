rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is signed in
    function isSignedIn() {
      return request.auth != null;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow users to read their own profile
      allow read: if isSignedIn() && request.auth.uid == userId;
      // Allow users to create their own profile upon signup
      allow create: if isSignedIn() && request.auth.uid == userId;
      // Allow Music Directors to read/write any user profile
      allow read, write: if isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Music Director';
    }

    // Rules for the 'songs' collection
    match /songs/{songId} {
      // Any signed-in user can read and write songs
      allow read, write: if isSignedIn();
    }

    // Rules for the 'concerts' collection
    match /concerts/{concertId} {
       // Any signed-in user can read and write concerts
      allow read, write: if isSignedIn();
    }

    // Rules for app-wide data like taxonomy
    match /app-data/{docId} {
       // Any signed-in user can read taxonomy
      allow read: if isSignedIn();
       // Only Music Directors can write/update taxonomy
      allow write: if isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'Music Director';
    }

    // Default deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
